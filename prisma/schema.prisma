generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  published    Boolean        @default(false)
  authorName   String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  authorId     Int
  author       User           @relation(fields: [authorId], references: [id])
  PostCategory PostCategory[]

  @@map("posts")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile? // one-to-one relation with Profile
  posts     Post[] // one-to-many relation with Post

  @@map("users")
}

enum UserRole {
  USER
  ADMIN
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PostCategory PostCategory[]

  @@map("categories")
}

model PostCategory {
  postId     Int
  categoryId Int
  post       Post     @relation(fields: [postId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
  @@map("post_categories")
}
